{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "title": {
    "text": "No Injuries Accident",
    "anchor": "middle",
    "fontSize": 14,
    "dy": -8,
    "dx": {
      "signal": "-width/4"
    }
  },
  "width": 280,
  "height": 280,
  "autosize": "none",
  "signals": [
    {
      "name": "radius",
      "update": "90"
    }
  ],
  "data": [
    {
      "url": "https://raw.githubusercontent.com/Andreas-UI/FIT3179-Data-Visualization-2/master/dataset/PERSON.csv",
      "format": {
        "type": "csv"
      },
      "transform": [
        {
          "type": "filter",
          "expr": "datum['Inj Level Desc'] == 'Not injured'"
        },
        {
          "type": "aggregate",
          "groupby": [
            "Road User Type Desc",
            "Inj Level Desc"
          ],
          "ops": [
            "count"
          ],
          "as": [
            "value"
          ]
        },
        {
          "type": "joinaggregate",
          "ops": [
            "sum"
          ],
          "as": [
            "TotalValue"
          ],
          "fields": [
            "value"
          ]
        },
        {
          "type": "formula",
          "expr": "datum.value/datum.TotalValue",
          "as": "normalized_value"
        }
      ],
      "name": "table"
    },
    {
      "name": "keys",
      "source": "table",
      "transform": [
        {
          "type": "aggregate",
          "groupby": [
            "Road User Type Desc"
          ]
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "angular",
      "type": "point",
      "range": {
        "signal": "[-PI, PI]"
      },
      "padding": 0.5,
      "domain": {
        "data": "table",
        "field": "Road User Type Desc"
      }
    },
    {
      "name": "radial",
      "type": "linear",
      "range": {
        "signal": "[0, radius]"
      },
      "zero": true,
      "nice": false,
      "domain": [
        0,
        0.7
      ]
    }
  ],
  "encode": {
    "enter": {
      "x": {
        "signal": "width/2"
      },
      "y": {
        "signal": "height/2 + 20"
      }
    }
  },
  "marks": [
    {
      "type": "group",
      "name": "categories",
      "zindex": 1,
      "from": {
        "facet": {
          "data": "table",
          "name": "facet",
          "groupby": [
            "Inj Level Desc"
          ]
        }
      },
      "marks": [
        {
          "type": "line",
          "name": "category-line",
          "from": {
            "data": "facet"
          },
          "encode": {
            "enter": {
              "interpolate": {
                "value": "linear-closed"
              },
              "x": {
                "signal": "scale('radial', datum.normalized_value) * cos(scale('angular', datum['Road User Type Desc']))"
              },
              "y": {
                "signal": "scale('radial', datum.normalized_value) * sin(scale('angular', datum['Road User Type Desc']))"
              },
              "stroke": {
                "value": "#B82E2E"
              },
              "strokeWidth": {
                "value": 1.5
              },
              "fill": {
                "value": "#B82E2E"
              },
              "fillOpacity": {
                "value": 0.1
              }
            }
          }
        },
        {
          "type": "text",
          "name": "value-text",
          "from": {
            "data": "category-line"
          },
          "encode": {
            "enter": {
              "x": {
                "signal": "datum.x + 14 * cos(scale('angular', datum.datum['Road User Type Desc']))"
              },
              "y": {
                "signal": "datum.y + 14 * cos(scale('angular', datum.datum['Road User Type Desc']))"
              },
              "text": {
                "signal": "format(datum.datum.normalized_value, '.1%')"
              },
              "align": {
                "value": "left"
              },
              "baseline": {
                "value": "bottom"
              },
              "fontWeight": {
                "value": "bold"
              },
              "fill": {
                "value": "#B82E2E"
              }
            }
          }
        }
      ]
    },
    {
      "type": "rule",
      "name": "radial-grid",
      "from": {
        "data": "keys"
      },
      "zindex": 0,
      "encode": {
        "enter": {
          "x": {
            "value": 0
          },
          "y": {
            "value": 0
          },
          "x2": {
            "signal": "radius * cos(scale('angular', datum['Road User Type Desc']))"
          },
          "y2": {
            "signal": "radius * sin(scale('angular', datum['Road User Type Desc']))"
          },
          "stroke": {
            "value": "lightgray"
          },
          "strokeWidth": {
            "value": 1
          }
        }
      }
    },
    {
      "type": "text",
      "name": "key-label",
      "from": {
        "data": "keys"
      },
      "zindex": 1,
      "encode": {
        "enter": {
          "x": {
            "signal": "(radius + 11) * cos(scale('angular', datum['Road User Type Desc']))"
          },
          "y": [
            {
              "test": "sin(scale('angular', datum['Road User Type Desc'])) > 0",
              "signal": "5 + (radius + 11) * sin(scale('angular', datum['Road User Type Desc']))"
            },
            {
              "test": "sin(scale('angular', datum['Road User Type Desc'])) < 0",
              "signal": "-5 + (radius + 11) * sin(scale('angular', datum['Road User Type Desc']))"
            },
            {
              "signal": "(radius + 11) * sin(scale('angular', datum['Road User Type Desc']))"
            }
          ],
          "text": {
            "field": "Road User Type Desc"
          },
          "align": [
            {
              "value": "center"
            }
          ],
          "baseline": [
            {
              "test": "scale('angular', datum['Road User Type Desc']) > 0",
              "value": "top"
            },
            {
              "test": "scale('angular', datum['Road User Type Desc']) == 0",
              "value": "middle"
            },
            {
              "value": "bottom"
            }
          ],
          "fill": {
            "value": "black"
          },
          "fontSize": {
            "value": 12
          }
        }
      }
    },
    {
      "type": "line",
      "name": "twenty-line",
      "from": {
        "data": "keys"
      },
      "encode": {
        "enter": {
          "interpolate": {
            "value": "linear-closed"
          },
          "x": {
            "signal": "0.2 * radius * cos(scale('angular', datum['Road User Type Desc']))"
          },
          "y": {
            "signal": "0.2 * radius * sin(scale('angular', datum['Road User Type Desc']))"
          },
          "stroke": {
            "value": "lightgray"
          },
          "strokeWidth": {
            "value": 1
          }
        }
      }
    },
    {
      "type": "line",
      "name": "fourty-line",
      "from": {
        "data": "keys"
      },
      "encode": {
        "enter": {
          "interpolate": {
            "value": "linear-closed"
          },
          "x": {
            "signal": "0.4 * radius * cos(scale('angular', datum['Road User Type Desc']))"
          },
          "y": {
            "signal": "0.4 * radius * sin(scale('angular', datum['Road User Type Desc']))"
          },
          "stroke": {
            "value": "lightgray"
          },
          "strokeWidth": {
            "value": 1
          }
        }
      }
    },
    {
      "type": "line",
      "name": "sixty-line",
      "from": {
        "data": "keys"
      },
      "encode": {
        "enter": {
          "interpolate": {
            "value": "linear-closed"
          },
          "x": {
            "signal": "0.6 * radius * cos(scale('angular', datum['Road User Type Desc']))"
          },
          "y": {
            "signal": "0.6 * radius * sin(scale('angular', datum['Road User Type Desc']))"
          },
          "stroke": {
            "value": "lightgray"
          },
          "strokeWidth": {
            "value": 1
          }
        }
      }
    },
    {
      "type": "line",
      "name": "eighty-line",
      "from": {
        "data": "keys"
      },
      "encode": {
        "enter": {
          "interpolate": {
            "value": "linear-closed"
          },
          "x": {
            "signal": "0.8 * radius * cos(scale('angular', datum['Road User Type Desc']))"
          },
          "y": {
            "signal": "0.8 * radius * sin(scale('angular', datum['Road User Type Desc']))"
          },
          "stroke": {
            "value": "lightgray"
          },
          "strokeWidth": {
            "value": 1
          }
        }
      }
    },
    {
      "type": "line",
      "name": "outer-line",
      "from": {
        "data": "radial-grid"
      },
      "encode": {
        "enter": {
          "interpolate": {
            "value": "linear-closed"
          },
          "x": {
            "field": "x2"
          },
          "y": {
            "field": "y2"
          },
          "stroke": {
            "value": "lightgray"
          },
          "strokeWidth": {
            "value": 1
          }
        }
      }
    }
  ]
}